/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package es.iesjandula.juegopokemon.windows;

import es.iesjandula.juegopokemon.classes.LecturaPokemons;
import es.iesjandula.juegopokemon.classes.Pokemon;
import es.iesjandula.juegopokemon.classes.Starter;
import es.iesjandula.juegopokemon.exception.PokemonException;
import java.util.List;
import javax.swing.ImageIcon;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
/**
 *
 * @author 2DAM
 */
public class SelectionWindow extends javax.swing.JFrame {
    private static Logger log = LogManager.getLogger();
    private final ImageIcon separator = new ImageIcon("src/main/resources/imagenes/separador.png");
    private final ImageIcon imagenBotonSeleccionIzquierda = new ImageIcon("src/main/resources/imagenesWidgets/flechaSeleccionIzquierda.png");
    private final ImageIcon imagenBotonSeleccionDerecha = new ImageIcon("src/main/resources/imagenesWidgets/flechaSeleccionDerecha.png");
    private final ImageIcon imagenSeleccion = new ImageIcon("src/main/resources/imagenesWidgets/seleccionando.png");
    private final ImageIcon imagenListo = new ImageIcon("src/main/resources/imagenesWidgets/listo.png");
    private LecturaPokemons pokemons;
    private List<Pokemon>normalPokemon;
    private Starter starter;
    private List<Pokemon>player1Pok;
    private List<Pokemon>player2Pok;
    private int index1;
    private int index2;
    private boolean ready1;
    private boolean ready2;
    private ImageIcon imagenCarta1;
    private ImageIcon imagenCarta2;
    /**
     * Creates new form SelectionWindow
     */
    public SelectionWindow() 
    {
        initComponents();
        this.index1=0;
        this.index2=0;
        this.cardSeparator.setIcon(separator);
        this.botonSeleccionIzquierda1.setIcon(imagenBotonSeleccionDerecha);
        this.botonSeleccionDerecha1.setIcon(imagenBotonSeleccionIzquierda);
        this.botonSeleccionIzquierda2.setIcon(imagenBotonSeleccionDerecha);
        this.botonSeleccionDerecha2.setIcon(imagenBotonSeleccionIzquierda);
        this.botonListo1.setIcon(imagenSeleccion);
        this.botonListo2.setIcon(imagenSeleccion);
        this.pokemons = new LecturaPokemons();
        try
        {
            pokemons.readNormalPokemons();
        }
        catch(PokemonException ex)
        {
            String error = "Error al cargar los pokemons";
            log.error(error,ex);     
        }
        normalPokemon = pokemons.getNormalPokeList();
        this.starter = new Starter(normalPokemon);
        this.player1Pok = starter.selectPokemons();
        this.player2Pok = starter.selectPokemons();
        this.nombrePokemon1.setText(this.player1Pok.get(index1).getName());
        this.nombrePokemon2.setText(this.player2Pok.get(index2).getName());
        this.imagenCarta1 = new ImageIcon(player1Pok.get(index1).getImageUrl());
        this.imagenCarta2 = new ImageIcon(player2Pok.get(index2).getImageUrl());
        this.carta1.setIcon(imagenCarta1);
        this.carta2.setIcon(imagenCarta2);
        this.ready1 = false;
        this.ready2 = false;   
    }
    public SelectionWindow(List<Pokemon>playerPok1,List<Pokemon>playerPok2)
    {
        initComponents();
        this.player1Pok = playerPok1;
        this.player2Pok = playerPok2;
        this.index1=0;
        this.index2=0;
        this.cardSeparator.setIcon(separator);
        this.botonSeleccionIzquierda1.setIcon(imagenBotonSeleccionDerecha);
        this.botonSeleccionDerecha1.setIcon(imagenBotonSeleccionIzquierda);
        this.botonSeleccionIzquierda2.setIcon(imagenBotonSeleccionDerecha);
        this.botonSeleccionDerecha2.setIcon(imagenBotonSeleccionIzquierda);
        this.botonListo1.setIcon(imagenSeleccion);
        this.botonListo2.setIcon(imagenSeleccion);
        this.nombrePokemon1.setText(this.player1Pok.get(index1).getName());
        this.nombrePokemon2.setText(this.player2Pok.get(index2).getName());
        this.imagenCarta1 = new ImageIcon(player1Pok.get(index1).getImageUrl());
        this.imagenCarta2 = new ImageIcon(player2Pok.get(index2).getImageUrl());
        this.carta1.setIcon(imagenCarta1);
        this.carta2.setIcon(imagenCarta2);
        this.ready1 = false;
        this.ready2 = false;   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jugador1 = new javax.swing.JLabel();
        jugador2 = new javax.swing.JLabel();
        carta1 = new javax.swing.JLabel();
        carta2 = new javax.swing.JLabel();
        nombrePokemon1 = new javax.swing.JLabel();
        nombrePokemon2 = new javax.swing.JLabel();
        cardSeparator = new javax.swing.JLabel();
        botonSeleccionIzquierda1 = new javax.swing.JLabel();
        botonSeleccionDerecha1 = new javax.swing.JLabel();
        botonSeleccionDerecha2 = new javax.swing.JLabel();
        botonSeleccionIzquierda2 = new javax.swing.JLabel();
        botonListo1 = new javax.swing.JLabel();
        botonListo2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jugador1.setFont(new java.awt.Font("Rubik", 0, 18)); // NOI18N
        jugador1.setText("Jugador 1");

        jugador2.setFont(new java.awt.Font("Rubik", 0, 18)); // NOI18N
        jugador2.setText("Jugador 2");

        carta1.setText("jLabel1");

        carta2.setText("jLabel2");

        nombrePokemon1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        nombrePokemon1.setText("jLabel3");

        nombrePokemon2.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        nombrePokemon2.setText("jLabel3");

        botonSeleccionIzquierda1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonSeleccionIzquierda1MouseClicked(evt);
            }
        });

        botonSeleccionDerecha1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonSeleccionDerecha1MouseClicked(evt);
            }
        });

        botonSeleccionDerecha2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonSeleccionDerecha2MouseClicked(evt);
            }
        });

        botonSeleccionIzquierda2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonSeleccionIzquierda2MouseClicked(evt);
            }
        });

        botonListo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonListo1MouseClicked(evt);
            }
        });

        botonListo2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonListo2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(176, 176, 176)
                                .addComponent(jugador1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addComponent(carta1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(nombrePokemon1)
                        .addGap(117, 117, 117))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botonListo2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)))
                .addGap(40, 40, 40)
                .addComponent(cardSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(carta2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(botonSeleccionDerecha1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nombrePokemon2)
                                .addGap(18, 18, 18)
                                .addComponent(botonSeleccionIzquierda1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jugador2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(botonListo1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(129, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(127, 127, 127)
                    .addComponent(botonSeleccionDerecha2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(723, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(264, 264, 264)
                    .addComponent(botonSeleccionIzquierda2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(586, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jugador1)
                                .addGap(104, 104, 104)
                                .addComponent(carta1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(nombrePokemon1)
                                .addGap(95, 95, 95)
                                .addComponent(botonListo2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(jugador2)
                                .addGap(104, 104, 104)
                                .addComponent(carta2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botonSeleccionIzquierda1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botonSeleccionDerecha1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(nombrePokemon2)))
                                .addGap(80, 80, 80)
                                .addComponent(botonListo1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 141, Short.MAX_VALUE))
                    .addComponent(cardSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(593, Short.MAX_VALUE)
                    .addComponent(botonSeleccionDerecha2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(274, 274, 274)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(593, Short.MAX_VALUE)
                    .addComponent(botonSeleccionIzquierda2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(274, 274, 274)))
        );

        carta2.getAccessibleContext().setAccessibleName("carta2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSeleccionIzquierda2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonSeleccionIzquierda2MouseClicked
        this.index1++;
        if(this.index1<player1Pok.size())
        {
            nombrePokemon1.setText(this.player1Pok.get(index1).getName());
            this.imagenCarta1 = new ImageIcon(player1Pok.get(index1).getImageUrl());
            this.carta1.setIcon(imagenCarta1);
        }
        else
        {
            this.index1=0;
            nombrePokemon1.setText(this.player1Pok.get(index1).getName());
            this.imagenCarta1 = new ImageIcon(player1Pok.get(index1).getImageUrl());
            this.carta1.setIcon(imagenCarta1);
        }
    }//GEN-LAST:event_botonSeleccionIzquierda2MouseClicked

    private void botonSeleccionDerecha2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonSeleccionDerecha2MouseClicked
        this.index1--;
        if(this.index1>0)
        {
            nombrePokemon1.setText(this.player1Pok.get(index1).getName());
            this.imagenCarta1 = new ImageIcon(player1Pok.get(index1).getImageUrl());
            this.carta1.setIcon(imagenCarta1);
        }
        else
        {
            this.index1=this.player1Pok.size()-1;
            nombrePokemon1.setText(this.player1Pok.get(index1).getName());
            this.imagenCarta1 = new ImageIcon(player1Pok.get(index1).getImageUrl());
            this.carta1.setIcon(imagenCarta1);
        }
    }//GEN-LAST:event_botonSeleccionDerecha2MouseClicked

    private void botonSeleccionIzquierda1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonSeleccionIzquierda1MouseClicked
        this.index2++;
        if(this.index2<player2Pok.size())
        {
            nombrePokemon2.setText(this.player2Pok.get(index2).getName());
            this.imagenCarta2 = new ImageIcon(player2Pok.get(index2).getImageUrl());
            this.carta2.setIcon(imagenCarta2);
        }
        else
        {
            this.index2=0;
            nombrePokemon2.setText(this.player2Pok.get(index2).getName());
            this.imagenCarta2 = new ImageIcon(player2Pok.get(index2).getImageUrl());
            this.carta2.setIcon(imagenCarta2);
        }
    }//GEN-LAST:event_botonSeleccionIzquierda1MouseClicked

    private void botonSeleccionDerecha1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonSeleccionDerecha1MouseClicked
        this.index2--;
        if(this.index2>0)
        {
            nombrePokemon2.setText(this.player2Pok.get(index2).getName());
            this.carta2.setIcon(imagenCarta2);
        }
        else
        {
            this.index2=this.player2Pok.size()-1;
            nombrePokemon2.setText(this.player2Pok.get(index2).getName());
            this.imagenCarta2 = new ImageIcon(player2Pok.get(index2).getImageUrl());
            this.carta2.setIcon(imagenCarta2);
        }

    }//GEN-LAST:event_botonSeleccionDerecha1MouseClicked

    private void botonListo2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonListo2MouseClicked
        if(this.ready2)
        {
            ready2=false;
            this.botonListo2.setIcon(imagenSeleccion);
        }
        else
        {
            ready2=true;
            this.botonListo2.setIcon(imagenListo);
        }
        if(ready1 && ready2)
        {
            CombatWindow cmbW = new CombatWindow(player1Pok.get(index1), player2Pok.get(index2), player1Pok, player2Pok);
            cmbW.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_botonListo2MouseClicked

    private void botonListo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonListo1MouseClicked
        if(this.ready1)
        {
            ready1=false;
            this.botonListo1.setIcon(imagenSeleccion);
        }
        else
        {
            ready1=true;
            this.botonListo1.setIcon(imagenListo);
        }
        if(ready1 && ready2)
        {
            CombatWindow cmbW = new CombatWindow(player1Pok.get(index1), player2Pok.get(index2), player1Pok, player2Pok);
            cmbW.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_botonListo1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectionWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectionWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectionWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectionWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelectionWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel botonListo1;
    private javax.swing.JLabel botonListo2;
    private javax.swing.JLabel botonSeleccionDerecha1;
    private javax.swing.JLabel botonSeleccionDerecha2;
    private javax.swing.JLabel botonSeleccionIzquierda1;
    private javax.swing.JLabel botonSeleccionIzquierda2;
    private javax.swing.JLabel cardSeparator;
    private javax.swing.JLabel carta1;
    private javax.swing.JLabel carta2;
    private javax.swing.JLabel jugador1;
    private javax.swing.JLabel jugador2;
    private javax.swing.JLabel nombrePokemon1;
    private javax.swing.JLabel nombrePokemon2;
    // End of variables declaration//GEN-END:variables
}
